import org.apache.tools.ant.filters.ReplaceTokens
import uk.co.ractf.polaris.GitInfo

import java.time.ZoneId
import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
        classpath "com.netflix.nebula:gradle-ospackage-plugin:8.5.6"
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.5.1'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'
apply plugin: 'nebula.ospackage'
apply plugin: 'info.solidsoft.pitest'

mainClassName = 'uk.co.ractf.polaris.Main'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation project(':polaris-api')
    implementation "io.dropwizard:dropwizard-core:$dropwizardVersion"
    implementation "io.dropwizard:dropwizard-auth:$dropwizardVersion"
    implementation "org.dhatim:dropwizard-sentry:2.0.20"
    implementation "com.smoketurner.dropwizard:consul-core:2.0.12-1"
    implementation "com.smoketurner.dropwizard:consul-ribbon:2.0.12-1"
    implementation "org.dhatim:dropwizard-prometheus:3.1.4"
    implementation 'io.swagger.core.v3:swagger-core:2.1.10'
    implementation 'io.swagger.core.v3:swagger-jaxrs2:2.1.10'
    implementation 'io.swagger.core.v3:swagger-integration:2.1.10'
    implementation 'com.github.docker-java:docker-java-core:3.2.11'
    implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.11'
    implementation 'org.jetbrains:annotations:21.0.1'
    implementation 'ru.vyarus:dropwizard-guicey:5.3.0'
    implementation 'com.palominolabs.metrics:metrics-guice:5.0.1'
    implementation 'io.dropwizard.metrics:metrics-core:4.2.3'
    implementation 'io.dropwizard.metrics:metrics-annotation:4.2.3'
    implementation 'com.amazonaws:aws-java-sdk-ecr:1.12.45'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testImplementation "io.dropwizard:dropwizard-testing:$dropwizardVersion"
    testImplementation 'org.assertj:assertj-core:3.20.2'
    testImplementation 'org.mockito:mockito-core:3.11.2'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
    manifest {
        attributes 'Implementation-Title': rootProject.name
        attributes 'Implementation-Version': rootProject.version
        attributes 'Implementation-Vendor-Id': rootProject.group
        attributes 'Build-Time': ZonedDateTime.now(ZoneId.of("UTC"))
                .format(DateTimeFormatter.ISO_ZONED_DATE_TIME)
        attributes 'Built-By': InetAddress.localHost.hostName
        attributes 'Created-By': 'Gradle ' + gradle.gradleVersion
        attributes 'Main-Class': mainClassName
    }
    archiveName 'polaris.jar'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

buildRpm {
    packageName = 'polaris'
    release = GitInfo.getGitCommit()
    version = rootProject.version
    arch = 'X86_64'
    os = 'LINUX'
    license = 'AGPL'
    url = 'https://github.com/ractf/polaris'
    vendor = 'RACTF'
    packageDescription = 'The RACTF challenge scheduler'
    maintainer = 'RACTF <admins@ractf.co.uk>'
    user = 'root'
    group = 'root'

    requires('systemd')
    requires('java-11-openjdk')

    from('src/main/dist/bin') {
        into '/etc/systemd/system'
        addParentDirs = false
    }

    from('src/main/dist/resources') {
        fileType CONFIG | NOREPLACE
        into '/etc/polaris'
        createDirectoryEntry = true
    }

    from(shadowJar.outputs.files) {
        into '/opt/polaris'
        createDirectoryEntry = true
    }

    /*from(project(':polaris-cli').getTasksByName('nativeImage', true)[0].outputs.files) {
        into '/usr/bin'
        fileMode 0755
    }*/
}
